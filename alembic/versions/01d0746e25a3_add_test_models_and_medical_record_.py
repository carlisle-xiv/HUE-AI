"""Add test models and medical record access

Revision ID: 01d0746e25a3
Revises: d06a6d3a1fde
Create Date: 2025-10-20 20:30:22.651583

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel.sql.sqltypes

# revision identifiers, used by Alembic.
revision = '01d0746e25a3'
down_revision = 'd06a6d3a1fde'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medical_record_access',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('patient_id', sa.Uuid(), nullable=False),
    sa.Column('accessor_id', sa.Uuid(), nullable=False),
    sa.Column('accessor_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('access_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('record_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('record_id', sa.UUID(), nullable=True),
    sa.Column('purpose', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('consent_given', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['accessor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medical_record_access_access_type'), 'medical_record_access', ['access_type'], unique=False)
    op.create_index(op.f('ix_medical_record_access_accessor_id'), 'medical_record_access', ['accessor_id'], unique=False)
    op.create_index(op.f('ix_medical_record_access_accessor_type'), 'medical_record_access', ['accessor_type'], unique=False)
    op.create_index(op.f('ix_medical_record_access_created_at'), 'medical_record_access', ['created_at'], unique=False)
    op.create_index(op.f('ix_medical_record_access_patient_id'), 'medical_record_access', ['patient_id'], unique=False)
    op.create_table('test_orders',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('patient_id', sa.Uuid(), nullable=False),
    sa.Column('doctor_id', sa.Uuid(), nullable=True),
    sa.Column('hospital_id', sa.Uuid(), nullable=True),
    sa.Column('medical_service_id', sa.Uuid(), nullable=False),
    sa.Column('order_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('order_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('total_amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('scheduled_date', sa.Date(), nullable=True),
    sa.Column('sample_collection_method', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('billing_entity', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('billing_entity_id', sa.UUID(), nullable=True),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.id'], ),
    sa.ForeignKeyConstraint(['medical_service_id'], ['medical_services.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_orders_doctor_id'), 'test_orders', ['doctor_id'], unique=False)
    op.create_index(op.f('ix_test_orders_hospital_id'), 'test_orders', ['hospital_id'], unique=False)
    op.create_index(op.f('ix_test_orders_medical_service_id'), 'test_orders', ['medical_service_id'], unique=False)
    op.create_index(op.f('ix_test_orders_order_number'), 'test_orders', ['order_number'], unique=True)
    op.create_index(op.f('ix_test_orders_patient_id'), 'test_orders', ['patient_id'], unique=False)
    op.create_index(op.f('ix_test_orders_scheduled_date'), 'test_orders', ['scheduled_date'], unique=False)
    op.create_index(op.f('ix_test_orders_status'), 'test_orders', ['status'], unique=False)
    op.create_table('test_results',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('test_order_id', sa.Uuid(), nullable=False),
    sa.Column('result_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('interpretation', sa.Text(), nullable=True),
    sa.Column('normal_ranges', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('abnormal_flags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('reviewed_by_id', sa.Uuid(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('report_file_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['test_order_id'], ['test_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_results_created_at'), 'test_results', ['created_at'], unique=False)
    op.create_index(op.f('ix_test_results_reviewed_by_id'), 'test_results', ['reviewed_by_id'], unique=False)
    op.create_index(op.f('ix_test_results_test_order_id'), 'test_results', ['test_order_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_test_results_test_order_id'), table_name='test_results')
    op.drop_index(op.f('ix_test_results_reviewed_by_id'), table_name='test_results')
    op.drop_index(op.f('ix_test_results_created_at'), table_name='test_results')
    op.drop_table('test_results')
    op.drop_index(op.f('ix_test_orders_status'), table_name='test_orders')
    op.drop_index(op.f('ix_test_orders_scheduled_date'), table_name='test_orders')
    op.drop_index(op.f('ix_test_orders_patient_id'), table_name='test_orders')
    op.drop_index(op.f('ix_test_orders_order_number'), table_name='test_orders')
    op.drop_index(op.f('ix_test_orders_medical_service_id'), table_name='test_orders')
    op.drop_index(op.f('ix_test_orders_hospital_id'), table_name='test_orders')
    op.drop_index(op.f('ix_test_orders_doctor_id'), table_name='test_orders')
    op.drop_table('test_orders')
    op.drop_index(op.f('ix_medical_record_access_patient_id'), table_name='medical_record_access')
    op.drop_index(op.f('ix_medical_record_access_created_at'), table_name='medical_record_access')
    op.drop_index(op.f('ix_medical_record_access_accessor_type'), table_name='medical_record_access')
    op.drop_index(op.f('ix_medical_record_access_accessor_id'), table_name='medical_record_access')
    op.drop_index(op.f('ix_medical_record_access_access_type'), table_name='medical_record_access')
    op.drop_table('medical_record_access')
    # ### end Alembic commands ###

