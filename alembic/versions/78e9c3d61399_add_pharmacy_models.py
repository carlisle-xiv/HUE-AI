"""Add pharmacy models

Revision ID: 78e9c3d61399
Revises: 9928e7ac18c7
Create Date: 2025-10-20 20:23:55.158387

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel.sql.sqltypes

# revision identifiers, used by Alembic.
revision = '78e9c3d61399'
down_revision = '9928e7ac18c7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drug_barcodes',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('barcode', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('pharmacy_code_id', sa.Uuid(), nullable=False),
    sa.Column('manufacturer', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('batch_number', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('manufacturing_date', sa.Date(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('is_authentic', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pharmacy_code_id'], ['pharmacy_codes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_drug_barcodes_barcode'), 'drug_barcodes', ['barcode'], unique=True)
    op.create_index(op.f('ix_drug_barcodes_expiry_date'), 'drug_barcodes', ['expiry_date'], unique=False)
    op.create_index(op.f('ix_drug_barcodes_manufacturer'), 'drug_barcodes', ['manufacturer'], unique=False)
    op.create_index(op.f('ix_drug_barcodes_pharmacy_code_id'), 'drug_barcodes', ['pharmacy_code_id'], unique=False)
    op.create_table('pharmacies',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('license_number', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('address', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('operating_hours', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('delivery_available', sa.Boolean(), nullable=False),
    sa.Column('delivery_radius_km', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('rating_average', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('total_ratings', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pharmacies_delivery_available'), 'pharmacies', ['delivery_available'], unique=False)
    op.create_index(op.f('ix_pharmacies_license_number'), 'pharmacies', ['license_number'], unique=True)
    op.create_index(op.f('ix_pharmacies_name'), 'pharmacies', ['name'], unique=False)
    op.create_index(op.f('ix_pharmacies_user_id'), 'pharmacies', ['user_id'], unique=True)
    op.create_table('barcode_scans',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('barcode', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('scan_result', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('drug_barcode_id', sa.Uuid(), nullable=True),
    sa.Column('location_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['drug_barcode_id'], ['drug_barcodes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_barcode_scans_barcode'), 'barcode_scans', ['barcode'], unique=False)
    op.create_index(op.f('ix_barcode_scans_created_at'), 'barcode_scans', ['created_at'], unique=False)
    op.create_index(op.f('ix_barcode_scans_scan_result'), 'barcode_scans', ['scan_result'], unique=False)
    op.create_index(op.f('ix_barcode_scans_user_id'), 'barcode_scans', ['user_id'], unique=False)
    op.create_table('pharmacy_inventory',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('pharmacy_id', sa.Uuid(), nullable=False),
    sa.Column('pharmacy_code_id', sa.Uuid(), nullable=False),
    sa.Column('quantity_available', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('batch_number', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('is_insurance_covered', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pharmacy_code_id'], ['pharmacy_codes.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pharmacy_inventory_expiry_date'), 'pharmacy_inventory', ['expiry_date'], unique=False)
    op.create_index(op.f('ix_pharmacy_inventory_is_insurance_covered'), 'pharmacy_inventory', ['is_insurance_covered'], unique=False)
    op.create_index(op.f('ix_pharmacy_inventory_pharmacy_code_id'), 'pharmacy_inventory', ['pharmacy_code_id'], unique=False)
    op.create_index(op.f('ix_pharmacy_inventory_pharmacy_id'), 'pharmacy_inventory', ['pharmacy_id'], unique=False)
    op.create_table('drug_orders',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('patient_id', sa.Uuid(), nullable=False),
    sa.Column('pharmacy_id', sa.Uuid(), nullable=False),
    sa.Column('prescription_id', sa.Uuid(), nullable=True),
    sa.Column('order_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('order_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('total_amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('insurance_covered_amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('patient_pay_amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('delivery_method', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('delivery_address', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('pharmacy_notes', sa.Text(), nullable=True),
    sa.Column('patient_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacies.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_drug_orders_created_at'), 'drug_orders', ['created_at'], unique=False)
    op.create_index(op.f('ix_drug_orders_order_number'), 'drug_orders', ['order_number'], unique=True)
    op.create_index(op.f('ix_drug_orders_patient_id'), 'drug_orders', ['patient_id'], unique=False)
    op.create_index(op.f('ix_drug_orders_pharmacy_id'), 'drug_orders', ['pharmacy_id'], unique=False)
    op.create_index(op.f('ix_drug_orders_prescription_id'), 'drug_orders', ['prescription_id'], unique=False)
    op.create_index(op.f('ix_drug_orders_status'), 'drug_orders', ['status'], unique=False)
    op.create_table('drug_order_items',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('drug_order_id', sa.Uuid(), nullable=False),
    sa.Column('pharmacy_inventory_id', sa.Uuid(), nullable=False),
    sa.Column('quantity_ordered', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('total_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['drug_order_id'], ['drug_orders.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_inventory_id'], ['pharmacy_inventory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_drug_order_items_drug_order_id'), 'drug_order_items', ['drug_order_id'], unique=False)
    op.create_index(op.f('ix_drug_order_items_pharmacy_inventory_id'), 'drug_order_items', ['pharmacy_inventory_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_drug_order_items_pharmacy_inventory_id'), table_name='drug_order_items')
    op.drop_index(op.f('ix_drug_order_items_drug_order_id'), table_name='drug_order_items')
    op.drop_table('drug_order_items')
    op.drop_index(op.f('ix_drug_orders_status'), table_name='drug_orders')
    op.drop_index(op.f('ix_drug_orders_prescription_id'), table_name='drug_orders')
    op.drop_index(op.f('ix_drug_orders_pharmacy_id'), table_name='drug_orders')
    op.drop_index(op.f('ix_drug_orders_patient_id'), table_name='drug_orders')
    op.drop_index(op.f('ix_drug_orders_order_number'), table_name='drug_orders')
    op.drop_index(op.f('ix_drug_orders_created_at'), table_name='drug_orders')
    op.drop_table('drug_orders')
    op.drop_index(op.f('ix_pharmacy_inventory_pharmacy_id'), table_name='pharmacy_inventory')
    op.drop_index(op.f('ix_pharmacy_inventory_pharmacy_code_id'), table_name='pharmacy_inventory')
    op.drop_index(op.f('ix_pharmacy_inventory_is_insurance_covered'), table_name='pharmacy_inventory')
    op.drop_index(op.f('ix_pharmacy_inventory_expiry_date'), table_name='pharmacy_inventory')
    op.drop_table('pharmacy_inventory')
    op.drop_index(op.f('ix_barcode_scans_user_id'), table_name='barcode_scans')
    op.drop_index(op.f('ix_barcode_scans_scan_result'), table_name='barcode_scans')
    op.drop_index(op.f('ix_barcode_scans_created_at'), table_name='barcode_scans')
    op.drop_index(op.f('ix_barcode_scans_barcode'), table_name='barcode_scans')
    op.drop_table('barcode_scans')
    op.drop_index(op.f('ix_pharmacies_user_id'), table_name='pharmacies')
    op.drop_index(op.f('ix_pharmacies_name'), table_name='pharmacies')
    op.drop_index(op.f('ix_pharmacies_license_number'), table_name='pharmacies')
    op.drop_index(op.f('ix_pharmacies_delivery_available'), table_name='pharmacies')
    op.drop_table('pharmacies')
    op.drop_index(op.f('ix_drug_barcodes_pharmacy_code_id'), table_name='drug_barcodes')
    op.drop_index(op.f('ix_drug_barcodes_manufacturer'), table_name='drug_barcodes')
    op.drop_index(op.f('ix_drug_barcodes_expiry_date'), table_name='drug_barcodes')
    op.drop_index(op.f('ix_drug_barcodes_barcode'), table_name='drug_barcodes')
    op.drop_table('drug_barcodes')
    # ### end Alembic commands ###

